package xd.safeheart.view;

import xd.safeheart.model.*;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.AbstractTableModel;
import observerPattern.Observer;

/**
 * User Interface of the program, by using JFrame
 * @author Chai Lam
 * @author Aik Han
 */
public class View extends javax.swing.JFrame implements Observer {

    ///// My declaration of variable
    private final javax.swing.JList<Patient> selectedPatientJList = new javax.swing.JList<>();
    private final javax.swing.JTable chojTable = new javax.swing.JTable();
    private final javax.swing.JTable tobjTable = new javax.swing.JTable();
    private final ArrayList <Observation> selectedChoObs;  //Cholesterol 
    private final HashMap<String, ArrayList<Observation>> selectedBloodSysObs; //Systolic Blood Pressure
    private final HashMap<String, ArrayList<Observation>> selectedBloodDiasObs;  //Diastolic Blood Pressure
    private final ArrayList <Observation> selectedTobacObs; //Tobacco
    private final CheckBoxListCellRenderer chkBoxRenderer;
    
    /**
     * Creates new form simpleGUI
     */
    public View() {
        this.selectedChoObs = new ArrayList<>();
        this.selectedBloodSysObs = new HashMap<>();
        this.selectedBloodDiasObs = new HashMap<>();
        this.selectedTobacObs = new ArrayList<>();
        this.chkBoxRenderer = new CheckBoxListCellRenderer();
        this.chojTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        this.tobjTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        initComponents();  

        //jListInitialize();
        jTableInitialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        patientPane = new javax.swing.JScrollPane();
        showPane = new javax.swing.JScrollPane();
        showChoButton = new javax.swing.JButton();
        showHyperBlood = new javax.swing.JLabel();
        showSysBloodPressureID = new javax.swing.JLabel();
        showHyperBlood2 = new javax.swing.JLabel();
        showDiasBloodPressureID = new javax.swing.JLabel();
        showTobBloodButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pracNameText = new javax.swing.JLabel();
        pracIdText = new javax.swing.JTextField();
        initButton = new javax.swing.JButton();
        pracLabel = new javax.swing.JLabel();
        displayText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FIT3077  Assignment 2");
        setResizable(false);

        showPane.setAutoscrolls(true);

        showChoButton.setText("Show Cholesterol");
        showChoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showChoButtonActionPerformed(evt);
            }
        });

        showHyperBlood.setForeground(new java.awt.Color(255, 0, 0));
        showHyperBlood.setText("Alert for Selected Patient (systolic > 180): ");

        showSysBloodPressureID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        showHyperBlood2.setForeground(new java.awt.Color(255, 0, 0));
        showHyperBlood2.setText("Alert for Selected Patient (diastolic > 120): ");

        showDiasBloodPressureID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        showTobBloodButton.setText("Show Tobacco & Blood Pressure");

        jLabel1.setText("Signs of Hypertensive Crisis:");

        jLayeredPane1.setLayer(patientPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showChoButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showHyperBlood, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showSysBloodPressureID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showHyperBlood2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showDiasBloodPressureID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showTobBloodButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(showChoButton)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(showTobBloodButton)
                        .addGap(55, 55, 55)))
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(showPane, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showHyperBlood)
                            .addComponent(jLabel1)
                            .addComponent(showSysBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showHyperBlood2)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showDiasBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(patientPane, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showChoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showTobBloodButton))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(showPane, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showHyperBlood)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showSysBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(showHyperBlood2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showDiasBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pracNameText.setText("Practitioner:");

        initButton.setText("Initialise");

        pracLabel.setText("Practitioner ID:");

        displayText.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(pracNameText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 468, Short.MAX_VALUE)
                .addComponent(pracLabel)
                .addGap(18, 18, 18)
                .addComponent(pracIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(initButton)
                .addGap(43, 43, 43))
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pracNameText)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pracLabel)
                                .addComponent(pracIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(initButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(displayText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ///// Action for the button "start"
    private void showChoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showChoButtonActionPerformed

    }//GEN-LAST:event_showChoButtonActionPerformed
    
    
    ///// Reset the Model for table to show the value
    private void jTableInitialize(){
        showPane.setViewportView(chojTable);
        AbstractTableModel choTableModel = new CholesterolTableModel(selectedChoObs);
        AbstractTableModel tobTableModel = new TobaccoTableModel(selectedTobacObs);
        chojTable.setModel(choTableModel);
        tobjTable.setModel(tobTableModel);
    }
    
    // Clears selected patients and observations
    public void clearChoSelected()
    {
        this.selectedChoObs.clear();
    }
    
    // Clears selected patients and observations
    public void clearTobBloodSelected()
    {
        this.selectedTobacObs.clear();
        this.selectedBloodDiasObs.clear();
        this.selectedBloodSysObs.clear();
    }
    
    // getters of UI element
    
    public CheckBoxListCellRenderer getChkBoxRenderer()
    {
        return this.chkBoxRenderer;
    }

    public javax.swing.JTextField getPracIdText()
    {
        return this.pracIdText;
    }
    
    public javax.swing.JLabel getPracNameText()
    {
        return this.pracNameText;
    }
    
    public javax.swing.JLabel getDisplayText()
    {
        return this.displayText;
    }
    
    public javax.swing.JLabel getSysBloodPressureIDText()
    {
        return this.showSysBloodPressureID;
    }
    
    public javax.swing.JLabel getDiasBloodPressureIDText()
    {
        return this.showDiasBloodPressureID;
    }
    
    public javax.swing.JScrollPane getPatientPane()
    {
        return this.patientPane;
    }
    
    public javax.swing.JScrollPane getShowPane()
    {
        return this.showPane;
    }
    
    public javax.swing.JTable getchoJTable()
    {
        return this.chojTable;
    }
    
    public javax.swing.JTable gettobJTable()
    {
        return this.tobjTable;
    }
    
    public javax.swing.JButton getShowChoButton()
    {
        return this.showChoButton;
    }
    
    public javax.swing.JButton getShowTobBloodButton()
    {
        return this.showTobBloodButton;
    }
    
    public javax.swing.JButton getInitButton()
    {
        return this.initButton;
    }
    
    public javax.swing.JList<Patient> getSelectedPatientJList()
    {
        return this.selectedPatientJList;
    }
    
    public ArrayList<Observation> getSelectedChoObs()
    {
        return this.selectedChoObs;
    }
    
    public HashMap<String, ArrayList<Observation>> getSelectedBloodSysObs()
    {
        return this.selectedBloodSysObs;
    }
    
    public HashMap<String, ArrayList<Observation>> getSelectedBloodDiasObs()
    {
        return this.selectedBloodDiasObs;
    }
    
    public ArrayList<Observation> getSelectedTobacObs()
    {
        return this.selectedTobacObs;
    }
    
    @Override
    public void update(){
    
    }
    
    
    /**
     * @param args the command line arguments
     */
    public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new simpleGUI().setVisible(true);
//            }
//        });    
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new simpleGUI().setVisible(true);
//            }
//        });    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel displayText;
    private javax.swing.JButton initButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane patientPane;
    private javax.swing.JTextField pracIdText;
    private javax.swing.JLabel pracLabel;
    private javax.swing.JLabel pracNameText;
    private javax.swing.JButton showChoButton;
    private javax.swing.JLabel showDiasBloodPressureID;
    private javax.swing.JLabel showHyperBlood;
    private javax.swing.JLabel showHyperBlood2;
    private javax.swing.JScrollPane showPane;
    private javax.swing.JLabel showSysBloodPressureID;
    private javax.swing.JButton showTobBloodButton;
    // End of variables declaration//GEN-END:variables
   
}
