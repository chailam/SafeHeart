/*
 * FIT3077 Assignment 2 SafeHeart
 * Made by:
 *	 Aik Han Ng (28947991)
 *	 Chai Lam Loi (28136179)
 */
package xd.safeheart.view;

import xd.safeheart.model.*;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.AbstractTableModel;

/**
 * User Interface of the program, by using JFrame
 * @author Chai Lam
 * @author Aik Han
 */
public class View extends javax.swing.JFrame {

    ///// My declaration of variable
    private final javax.swing.JList<Patient> selectedPatientJList = new javax.swing.JList<>();
    private final javax.swing.JTable chojTable = new javax.swing.JTable();
    private final javax.swing.JTable tobjTable = new javax.swing.JTable();
    private final ArrayList <Observation> selectedChoObs;  //Cholesterol 
    private final HashMap<String, ArrayList<Observation>> selectedBloodSysObs; //Systolic Blood Pressure
    private final HashMap<String, ArrayList<Observation>> selectedBloodDiasObs;  //Diastolic Blood Pressure
    private final ArrayList <Observation> selectedTobacObs; //Tobacco
    private final CheckBoxListCellRenderer chkBoxRenderer;
    
    /**
     * Creates new form simpleGUI
     */
    public View() {
        this.selectedChoObs = new ArrayList<>();
        this.selectedBloodSysObs = new HashMap<>();
        this.selectedBloodDiasObs = new HashMap<>();
        this.selectedTobacObs = new ArrayList<>();
        this.chkBoxRenderer = new CheckBoxListCellRenderer();
        initComponents();  

        //jListInitialize();
        jTableInitialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        patientPane = new javax.swing.JScrollPane();
        choPane = new javax.swing.JScrollPane();
        showChoButton = new javax.swing.JButton();
        tobPane = new javax.swing.JScrollPane();
        showHyperBlood = new javax.swing.JLabel();
        showSysBloodPressureID = new javax.swing.JLabel();
        showHyperBlood2 = new javax.swing.JLabel();
        showDiasBloodPressureID = new javax.swing.JLabel();
        showTobBloodButton = new javax.swing.JButton();
        pracNameText = new javax.swing.JLabel();
        pracIdText = new javax.swing.JTextField();
        initButton = new javax.swing.JButton();
        pracLabel = new javax.swing.JLabel();
        displayText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FIT3077  Assignment 2");

        choPane.setAutoscrolls(true);

        showChoButton.setText("Show Cholesterol");
        showChoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showChoButtonActionPerformed(evt);
            }
        });

        showHyperBlood.setText("Alert for Selected Patient (systolic > 180): ");

        showHyperBlood2.setText("Alert for Selected Patient (diastolic > 120): ");

        showTobBloodButton.setText("Show Tobacco&Blood Pressure");

        jLayeredPane1.setLayer(patientPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(choPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showChoButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tobPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showHyperBlood, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showSysBloodPressureID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showHyperBlood2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showDiasBloodPressureID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(showTobBloodButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(patientPane, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tobPane, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                            .addComponent(choPane)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showDiasBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(showHyperBlood2)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(showSysBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(showHyperBlood))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showChoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showTobBloodButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(949, 949, 949))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(choPane, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tobPane, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showHyperBlood)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showSysBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showHyperBlood2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(patientPane, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showChoButton)
                    .addComponent(showTobBloodButton)
                    .addComponent(showDiasBloodPressureID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pracNameText.setText("Practitioner:");

        initButton.setText("Initialise");

        pracLabel.setText("Practitioner ID:");

        displayText.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(pracNameText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(displayText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(183, 183, 183)
                .addComponent(pracLabel)
                .addGap(18, 18, 18)
                .addComponent(pracIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(initButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1011, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayText, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pracNameText)
                        .addComponent(pracIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(initButton)
                        .addComponent(pracLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ///// Action for the button "start"
    private void showChoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showChoButtonActionPerformed
//        getSelected();
//        jTableInitialize();
    }//GEN-LAST:event_showChoButtonActionPerformed
    
    
    ///// Reset the Model for table to show the value
    private void jTableInitialize(){
        choPane.setViewportView(chojTable);
        tobPane.setViewportView(tobjTable);
        AbstractTableModel choTableModel = new TableModel1(selectedChoObs);
        AbstractTableModel tobTableModel = new TableModel2(selectedTobacObs);
        chojTable.setModel(choTableModel);
        tobjTable.setModel(tobTableModel);
    }
    
    // Clears selected patients and observations
    public void clearSelected()
    {
        this.selectedChoObs.clear();
        this.selectedTobacObs.clear();
        this.selectedBloodDiasObs.clear();
        this.selectedBloodSysObs.clear();
    }
    
    // getters of UI element
    
    public CheckBoxListCellRenderer getChkBoxRenderer()
    {
        return this.chkBoxRenderer;
    }

    public javax.swing.JTextField getPracIdText()
    {
        return this.pracIdText;
    }
    
    public javax.swing.JLabel getPracNameText()
    {
        return this.pracNameText;
    }
    
    public javax.swing.JLabel getDisplayText()
    {
        return this.displayText;
    }
    
    public javax.swing.JLabel getSysBloodPressureIDText()
    {
        return this.showSysBloodPressureID;
    }
    
    public javax.swing.JLabel getDiasBloodPressureIDText()
    {
        return this.showDiasBloodPressureID;
    }
    
    public javax.swing.JScrollPane getPatientPane()
    {
        return this.patientPane;
    }
    
    public javax.swing.JScrollPane getchoPane()
    {
        return this.choPane;
    }
    
    public javax.swing.JScrollPane gettobPane()
    {
        return this.tobPane;
    }
    
    public javax.swing.JTable getchoJTable()
    {
        return this.chojTable;
    }
    
    public javax.swing.JTable gettobJTable()
    {
        return this.tobjTable;
    }
    
    public javax.swing.JButton getShowChoButton()
    {
        return this.showChoButton;
    }
    
    public javax.swing.JButton getShowTobBloodButton()
    {
        return this.showTobBloodButton;
    }
    
    public javax.swing.JButton getInitButton()
    {
        return this.initButton;
    }
    
    public javax.swing.JList<Patient> getSelectedPatientJList()
    {
        return this.selectedPatientJList;
    }
    
    public ArrayList<Observation> getSelectedChoObs()
    {
        return this.selectedChoObs;
    }
    
    public HashMap<String, ArrayList<Observation>> getSelectedBloodSysObs()
    {
        return this.selectedBloodSysObs;
    }
    
    public HashMap<String, ArrayList<Observation>> getSelectedBloodDiasObs()
    {
        return this.selectedBloodDiasObs;
    }
    
    public ArrayList<Observation> getSelectedTobacObs()
    {
        return this.selectedTobacObs;
    }
    
    /**
     * @param args the command line arguments
     */
    public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new simpleGUI().setVisible(true);
//            }
//        });    
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new simpleGUI().setVisible(true);
//            }
//        });    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane choPane;
    private javax.swing.JLabel displayText;
    private javax.swing.JButton initButton;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane patientPane;
    private javax.swing.JTextField pracIdText;
    private javax.swing.JLabel pracLabel;
    private javax.swing.JLabel pracNameText;
    private javax.swing.JButton showChoButton;
    private javax.swing.JLabel showDiasBloodPressureID;
    private javax.swing.JLabel showHyperBlood;
    private javax.swing.JLabel showHyperBlood2;
    private javax.swing.JLabel showSysBloodPressureID;
    private javax.swing.JButton showTobBloodButton;
    private javax.swing.JScrollPane tobPane;
    // End of variables declaration//GEN-END:variables
   
}
